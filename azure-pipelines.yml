# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

stages:
- stage: 'Build'
  jobs:
  - job: 'Build'
    displayName: 'BuildandPush'
    pool:
      vmImage: ubuntu-latest
    variables:
      pythonVersion: '3.7'
    steps:
    - task: UsePythonVersion@0
      displayName: 'Python Version : {{ pythonVersion }}'
      inputs:
        versionSpec: '$(pythonVersion)'
      
    - task: Bash@3
      displayName: 'Install tools'
      inputs:
        targetType: 'inline'
        script: python -m pip install --upgrade pip setuptools wheel
      
    - task: Bash@3
      displayName: 'nstall requirements'
      inputs:
        targetType: 'inline'
        script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
        #workingDirectory: $(projectRoot)
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
        #verbose: # (no value); this input is optional
    
    - pwsh: |       
       Get-ChildItem -Path $(Build.ArtifactStagingDirectory)\*.* -Recurse -Force | Out-String -Width 180
      errorActionPreference: continue
      displayName: 'List content'
      continueOnError: true

    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

    # - script: |
    #      python -m venv antenv
    #      source antenv/bin/activate
    #      python -m pip install --upgrade pip
    #      pip install setup
    #      pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
    #   workingDirectory: $(projectRoot)
    #   displayName: "Install requirements"